ny_map <- ggmap("New York City", extent = "device", legend = "topleft")
ny_map + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 14)
ny_map <- ggmap(ny, extent = "device", legend = "topleft")
ny_map + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 14)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
install.packages("ggmap", type = "source")
install.packages("ggmap", type = "source")
ny <- get_map("New York City", zoom = 14)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
jumpman_data <- jumpman_data %>% rowwise() %>% mutate(dist_haver = distHaversine(c(pickup_lon, pickup_lat), c(dropoff_lon, dropoff_lat)))
jumpman_data$dist_haver_miles <- jumpman_data$dist_haver / 1609
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation")
empty_quantity <- jumpman_data[is.na(jumpman_data$item_quantity),]
jumpman_data_clean <- jumpman_data[!is.na(jumpman_data$item_quantity),]
nrow(empty_quantity)
nrow(jumpman_data)
(nrow(empty_quantity)/nrow(jumpman_data))*100
ny <- get_map("New York City", zoom = 14)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 21)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 6)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 12)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") ++ stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon") ++ stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + geom_point(aes(x=dropoff_lon, y=dropoff_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + geom_point(aes(x=dropoff_lon, y=dropoff_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft", data = jumpman_data_clean) + geom_point(aes(x = pickup_lon, y = pickup_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + geom_point(aes(data = jumpman_data_clean, x = pickup_lon, y = pickup_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = pickup_lon, y = pickup_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = pickup_lon, y = pickup_lat))
ggmap(ny, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = dropoff_lon, y = dropoff_lat))
install.packages("leaflet")
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=-73.987325, lat=40.758899, popup="Time Square")
map
ny <- get_map("New York City", zoom = 10)
ggmap(map, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = pickup_lon, y = pickup_lat))
ggmap(ny, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = dropoff_lon, y = dropoff_lat))
ny <- get_map("New York City", zoom = 10)
ggmap(map, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = pickup_lon, y = pickup_lat))
ggmap(map, extent = "device", legend = "topleft") + geom_point(data = jumpman_data_clean, aes(x = dropoff_lon, y = dropoff_lat))
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup="Time Square")
map
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
map
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
jumpman_data_clean$order_count<- aggregate(cbind(count = pickup_place) ~ pickup_place,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
map
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
jumpman_data_clean$order_count<- aggregate(cbind(count = VALUE) ~ pickup_place,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
map
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
jumpman_data_clean$order_count<- aggregate(cbind(count = item_quantity) ~ pickup_place,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
map
aggregate(cbind(count = item_quantity) ~ pickup_place,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
df_melt <- melt(jumpman_data_clean, id = c("pickup_place", "pickup_lat", "pickup_lon"))
dcast(df_melt, year + month ~ variable, sum)
# map
View(df_melt)
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
# df_melt <- melt(jumpman_data_clean, id = c("pickup_place", "pickup_lat", "pickup_lon"))
# dcast(df_melt, year + month ~ variable, sum)
# map
View(order_place)
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( pickup_place, toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x, toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x$pickup_place, toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x[3], toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x[1], toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x[2], toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x[4], toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
map <- addMarkers(map, lng=jumpman_data_clean$pickup_lon, lat=jumpman_data_clean$pickup_lat, popup=jumpman_data_clean$pickup_place)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ paste( x[5], toString(NROW(x)), sep=" : ") })
# map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- as.data.frame(order_place)
order_place$popup <- paste(order_place$pickup_place, toString(count), sep=" : ")
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- as.data.frame(order_place)
order_place$popup <- lapply(paste(order_place$pickup_place, toString(count), sep=" : "))
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- as.data.frame(order_place)
order_place$popup <- lapply(FUN = function(x){ paste(order_place$pickup_place, toString(count), sep=" : ")} )
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- as.data.frame(order_place)
order_place$popup <- paste(order_place$pickup_place, toString(order_place$count), sep=" : ")
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
help(lapply)
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- as.data.frame(order_place)
order_place$popup <- lapply(order_place, FUN = function(x) {paste(x$pickup_place, toString(x$count), sep=" : ") } )
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- data.frame(order_place)
order_place$popup <- lapply(order_place, FUN = function(x) {paste(x$pickup_place, toString(x$count), sep=" : ") } )
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- data.frame(order_place)
# order_place$popup <- lapply(order_place, FUN = function(x) {paste(x$pickup_place, toString(x$count), sep=" : ") } )
order_place$popup <- paste(order_place$pickup_place, toString(order_place$count), sep=" : ")
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- data.frame(order_place)
# order_place$popup <- lapply(order_place, FUN = function(x) {paste(x$pickup_place, toString(x$count), sep=" : ") } )
order_place <- order_place %>% rowwise() %>% paste(pickup_place, toString(count), sep=" : ")
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
library("reshape2")
map <- leaflet()
map <- addTiles(map)
order_place <- aggregate(cbind(count = item_quantity) ~ pickup_place + pickup_lat + pickup_lon,
data = jumpman_data_clean,
FUN = function(x){ NROW(x) })
order_place <- data.frame(order_place)
# order_place$popup <- lapply(order_place, FUN = function(x) {paste(x$pickup_place, toString(x$count), sep=" : ") } )
order_place <- order_place %>% rowwise() %>% mutate(popup = paste(pickup_place, toString(count), sep=" : ") )
map <- addMarkers(map, lng=order_place$pickup_lon, lat=order_place$pickup_lat, popup=order_place$popup)
map
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.7)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13.7)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 10)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
empty_quantity <- jumpman_data[is.na(jumpman_data$item_quantity),]
jumpman_data_clean <- jumpman_data[!is.na(jumpman_data$item_quantity),]
nrow(empty_quantity)
nrow(jumpman_data)
(nrow(empty_quantity)/nrow(jumpman_data))*100
jumpman_data_clean/30
empty_quantity <- jumpman_data[is.na(jumpman_data$item_quantity),]
jumpman_data_clean <- jumpman_data[!is.na(jumpman_data$item_quantity),]
nrow(empty_quantity)
nrow(jumpman_data)
(nrow(empty_quantity)/nrow(jumpman_data))*100
nrow(jumpman_data_clean)/30
ny <- get_map("New York City", zoom = 14)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 143
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map("New York City", zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
help("get_map")
ny <- get_map(location = c(lon = -95.3632715, lat = 29.7632836), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.976691, lat = 40.766801), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.976691, lat = 40.766801), zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.963854, lat = 40.754424), zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.965403, lat = 40.748597), zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.968046, lat = 40.743858), zoom = 13.5)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.968046, lat = 40.743858), zoom = 14)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.968046, lat = 40.743858), zoom = 113)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.968046, lat = 40.743858), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.968046, lat = 40.743858), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, color = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, fill = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, fill = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 3, data = jumpman_data_clean, geom = "polygon")
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, fill = "green", geom = "polygon") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")
install.packages("gridExtra")
help(grid.arrange)
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
library("gridExtra")
help(grid.arrange)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs("Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs("Density of Dropoff up location")
grid.arrange(pickup, dropoff)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs("Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs("Density of Dropoff up location")
grid.arrange(pickup, dropoff, nrow=1, ncol=2)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs(title= "Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs(title= "Density of Dropoff up location")
grid.arrange(pickup, dropoff, nrow=1, ncol=2)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs(title= "Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs(title= "Density of Dropoff Locations")
grid.arrange(pickup, dropoff, nrow=1, ncol=2)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, fill = ..level.., alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs(title= "Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, fill = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs(title= "Density of Dropoff Locations")
grid.arrange(pickup, dropoff, nrow=1, ncol=2)
ny <- get_map(location = c(lon = -73.972026, lat = 40.745362), zoom = 13)
pickup <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = pickup_lon, y = pickup_lat, alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon") + labs(title= "Density of Pickup location")
dropoff <- ggmap(ny, extent = "device", legend = "topleft") + stat_density2d( aes(x = dropoff_lon, y = dropoff_lat, alpha = ..level..), size = 2, bins = 4, data = jumpman_data_clean, geom = "polygon")  + labs(title= "Density of Dropoff Locations")
grid.arrange(pickup, dropoff, nrow=1, ncol=2)
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
library("gridExtra")
jhilliard_theme <- theme(
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(family = "sans", size = 12, color = "black"),
axis.title.y = element_text(family = "sans", size = 12, color = "black"),
plot.title = element_text(family = "sans", size = 16, color = "black"),
legend.text = element_text(family = "sans", size = 8, color = "black"),
legend.position = "right",
legend.title = element_text(family = "sans", size = 10, color = "black"),
axis.ticks = element_line(color = "black"),
axis.text = element_text(family = "sans", size = 8, color = "black")
)
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
jumpman_data <- jumpman_data %>% rowwise() %>% mutate(dist_haver = distHaversine(c(pickup_lon, pickup_lat), c(dropoff_lon, dropoff_lat)))
jumpman_data$dist_haver_miles <- jumpman_data$dist_haver / 1609
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation")
jumpman_data <- jumpman_data %>% rowwise() %>% mutate(dist_haver = distHaversine(c(pickup_lon, pickup_lat), c(dropoff_lon, dropoff_lat)))
jumpman_data$dist_haver_miles <- jumpman_data$dist_haver / 1609
install.packages("tibble") ;
install.packages("tibble")
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
install.packages("plotly")
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap( ~ vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap( vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
library("gridExtra")
jhilliard_theme <- theme(
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(family = "sans", size = 12, color = "black"),
axis.title.y = element_text(family = "sans", size = 12, color = "black"),
plot.title = element_text(family = "sans", size = 16, color = "black"),
legend.text = element_text(family = "sans", size = 8, color = "black"),
legend.position = "right",
legend.title = element_text(family = "sans", size = 10, color = "black"),
axis.ticks = element_line(color = "black"),
axis.text = element_text(family = "sans", size = 8, color = "black")
)
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
library("gridExtra")
jhilliard_theme <- theme(
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(family = "sans", size = 12, color = "black"),
axis.title.y = element_text(family = "sans", size = 12, color = "black"),
plot.title = element_text(family = "sans", size = 16, color = "black"),
legend.text = element_text(family = "sans", size = 8, color = "black"),
legend.position = "right",
legend.title = element_text(family = "sans", size = 10, color = "black"),
axis.ticks = element_line(color = "black"),
axis.text = element_text(family = "sans", size = 8, color = "black")
)
jumpman_data <- jumpman_data %>% rowwise() %>% mutate(dist_haver = distHaversine(c(pickup_lon, pickup_lat), c(dropoff_lon, dropoff_lat)))
jumpman_data$dist_haver_miles <- jumpman_data$dist_haver / 1609
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
file_name <- "/Users/justinhilliard/Desktop/Jumpman23"
setwd(file_name)
jumpman_data <- data.frame(read.csv("analyze_me.csv"))
library("geosphere")
library("dplyr")
library("ggplot2")
library("ggmap")
library("leaflet")
library("gridExtra")
library("tibble")
jhilliard_theme <- theme(
panel.background = element_rect(fill = "white"),
axis.title.x = element_text(family = "sans", size = 12, color = "black"),
axis.title.y = element_text(family = "sans", size = 12, color = "black"),
plot.title = element_text(family = "sans", size = 16, color = "black"),
legend.text = element_text(family = "sans", size = 8, color = "black"),
legend.position = "right",
legend.title = element_text(family = "sans", size = 10, color = "black"),
axis.ticks = element_line(color = "black"),
axis.text = element_text(family = "sans", size = 8, color = "black")
)
jumpman_data <- jumpman_data %>% rowwise() %>% mutate(dist_haver = distHaversine(c(pickup_lon, pickup_lat), c(dropoff_lon, dropoff_lat)))
jumpman_data$dist_haver_miles <- jumpman_data$dist_haver / 1609
summary(jumpman_data$dist_haver_miles)
ggplot(data=jumpman_data) + geom_histogram(aes(x=dist_haver_miles), binwidth = .15) + facet_wrap(~vehicle_type) + labs(x="Haversine Distance of deliveries in Miles", y="Delivery Count", title="Distance of Deliveries by Method of Transportation") + jhilliard_theme
